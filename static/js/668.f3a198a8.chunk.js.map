{"version":3,"file":"static/js/668.f3a198a8.chunk.js","mappings":"+PA0CA,EAtCoB,WAClB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAmCE,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAqBC,EAArB,KAiBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAESC,EAAAA,EAAAA,IAAWP,GAFpB,OAEXQ,EAFW,OAKjBJ,EAAWI,EAAYC,SALN,gDAOjBC,QAAQC,IAAI,KAAMC,SAPD,yDAAH,qDAUlBN,EAAaN,EACd,GAAE,CAACA,KAGF,4BACE,qCACA,wBAC2B,IAAxBG,EAAaU,OACZV,EAAaW,KAAI,SAAAC,GAAM,OACrB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADK,KAOvB,8CAKT,C","sources":["components/ReviewsData/ReviewsData.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../services/api';\n\nconst ReviewsData = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setReviews] = useState('');\n  //   const location = useLocation();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsData = await getReviews(movieId);\n        // console.log('reviewsData: ', reviewsData.results);\n\n        setReviews(reviewsData.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      <h5>REVIEWS</h5>\n      <ul>\n        {movieReviews.length !== 0 ? (\n          movieReviews.map(review => (\n            <li key={review.id}>\n              <h6>{review.author}</h6>\n              <p>{review.content}</p>\n            </li>\n          ))\n        ) : (\n          <p>No reviews yet</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default ReviewsData;\n"],"names":["movieId","useParams","useState","movieReviews","setReviews","useEffect","fetchReviews","getReviews","reviewsData","results","console","log","message","length","map","review","author","content","id"],"sourceRoot":""}